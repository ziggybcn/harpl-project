Import Harpl
Import harplvm.bytecodeobj
Import harplvm.harplfunction
Import harplvm.harplbytecoder
Import harplvm.runtimescope

#Rem
	summary: This is the Harpl Virtual Machine Class.
	This Class can execute Harpl Byte Code generated by the HarplByteCoder Class.
#end
Class Hvm
	Field instructionSet:HarplFunction[]
	Field tmpStrings:String[]
	Field tmpInt:Int[]
	Field tmpBool:Bool[]
	Field tmpFloat:Float[]
	
	Field runTimeErrors := new List < RunTimeError >
	
	Method Run(byteCodeObj:ByteCodeObj)

		If byteCodeObj = null Then Error "Tried to run a null program."

		'We initialize the VM speciffic built-in functions:
		If instructionSet.Length = 0 Then RegisterBuiltIn
		
		'We initialite the HEAP space:
		tmpStrings = tmpStrings[..byteCodeObj.requiredStringsSize]
		tmpInt = tmpInt[..byteCodeObj.RequiredIntegerSize]
		tmpBool = tmpBool[..byteCodeObj.requiredBooleanSize]
		tmpFloat = tmpFloat[..byteCodeObj.RequiredFloatSize]
		
		Local pos:Int = 0, done:Bool = false;
		Local execlimit:Int = byteCodeObj.code.Length() - 1
		While Not done And byteCodeObj.pos < execlimit
			
		Wend
	End
	
	Method RegisterBuiltIn()
	End
End

Class RunTimeError
	Field description:String = ""	
End

Class VM_InstructionSet abstract
	Const Sum = 1
	Const Sub = 2
	Const Mul = 3
	Const Div = 4
	Const Pow = 5
	Const Modulus = 6
	Const BitAnd = 7
	Const BitOr = 8
End

Class VM_DataId abstract
	Const LiteralString = 1
	Const LiteralInt = 2
	Const LiteralFloat = 3
	Const LiteralTrue = 4
	Const LiteralFalse = 5
	Const VarString = 6
	Const VarInt = 7
	Const VarFloat = 8
	Const VarBool = 9
	Const TmpString = 10
	Const TmpInt = 11
	Const TmpFloat= 12
	Const TmpBool = 13
End




